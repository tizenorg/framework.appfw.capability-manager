CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(capability-manager C)

SET(PREFIX ${CMAKE_INSTALL_PREFIX})
SET(INCLUDEDIR "${PREFIX}/include")
SET(VERSION_MAJOR 0)
SET(VERSION "${VERSION_MAJOR}.0.1")

SET(SRCS
	src/capability_manager.c
	src/capability_manager_util.c
	src/capability_manager_xml.c
)

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include)

INCLUDE(FindPkgConfig)
PKG_CHECK_MODULES(pkgs REQUIRED
			glib-2.0
			bundle
			libxml-2.0
			dlog
			pkgmgr
			pkgmgr-info
			capi-appfw-package-manager
		 )

FOREACH(flag ${pkgs_CFLAGS})
        SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} ${flag}")
ENDFOREACH(flag)

#CFLAGS
SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} -fvisibility=hidden")
SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} -g -Wall")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_CFLAGS}")

ADD_LIBRARY(${PROJECT_NAME} SHARED ${SRCS})
SET(CMAKE_SHARED_LINKER_FLAGS -Wl,--no-undefined)

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES SOVERSION ${VERSION_MAJOR})
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES VERSION ${VERSION})
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS "${EXTRA_CFLAGS}")
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${pkgs_LDFLAGS})

CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/capability-manager.pc.in ${CMAKE_BINARY_DIR}/capability-manager.pc @ONLY)

INSTALL(TARGETS ${PROJECT_NAME} DESTINATION /usr/lib)
INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/include/capability_manager.h DESTINATION include)
INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/capability-manager.pc DESTINATION lib/pkgconfig)
